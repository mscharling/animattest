selector_to_html = {"a[href=\"#distributivitet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3.2.3. </span>Distributivitet<a class=\"headerlink\" href=\"#distributivitet\" title=\"Permalink til denne overskrift\">#</a></h3><p>Vi siger, at en kombination af to regneoperatorer er distributiv, hvis de opfylder den distributive lov. Loven siger</p>", "a[href=\"#regnearterne\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3. </span>Regnearterne<a class=\"headerlink\" href=\"#regnearterne\" title=\"Permalink til denne overskrift\">#</a></h1><p>Du kender dem allerede. Vi har fire grundl\u00e6ggende regnearter eller regneoperationer, nemlig</p>", "a[href=\"#regnearternes-egenskaber\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3.2. </span>Regnearternes egenskaber<a class=\"headerlink\" href=\"#regnearternes-egenskaber\" title=\"Permalink til denne overskrift\">#</a></h2><p>Regnearterne har egenskaber, der er bestemt ud fra nogle love. Vi kommer til at besk\u00e6ftige os med den kommutative lov, associative lov og distributive lov.</p>", "a[href=\"#regnearternes-hiearki\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3.1. </span>Regnearternes hiearki<a class=\"headerlink\" href=\"#regnearternes-hiearki\" title=\"Permalink til denne overskrift\">#</a></h2><p>Arbejder vi med avanceret matematiske regneudtryk, s\u00e5 er det vigtigt, at man kan finde ud af at opdele et regneudtryk i mindre bidder og i hvilken bid, man skal starte. Kigger vi f.eks. p\u00e5 udtrykket</p>", "a[href=\"#minus-er-ikke-kommutativ\"]": "<div class=\"proof eksempel admonition\" id=\"minus-er-ikke-kommutativ\">\n<p class=\"admonition-title\"><span class=\"caption-number\">Eksempel 1.6 </span> (<span class=\"math notranslate nohighlight\">\\(-\\)</span> er ikke kommutativ)</p>\n<section class=\"eksempel-content\" id=\"proof-content\">\n<p>Vi kan faktisk vise, at <span class=\"math notranslate nohighlight\">\\(-\\)</span> ikke er en kommutativ regneoperator. Vi beh\u00f8ver faktisk kun at komme med et eksempel p\u00e5 at vise dette. Lad os forts\u00e6tte med de samme tal fra <a class=\"reference internal\" href=\"#plus-og-gange-er-kommutative\">Eksempel 1.5</a>:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    2 - 4 = -2\n    \n\\]</div>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    4 - 2 = 2\n    \n\\]</div>\n<p>eftersom <span class=\"math notranslate nohighlight\">\\(-2 \\neq 2\\)</span>, s\u00e5 er <span class=\"math notranslate nohighlight\">\\(2-4\\neq 4-2\\)</span>, hvilket viser, at <span class=\"math notranslate nohighlight\">\\(-\\)</span> ikke er kommutativ.</p>\n</section>\n</div>", "a[href=\"faktorisering-og-kvadratkomplettering.html#faktoriseringogkvadratkomplettering\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.5. </span>Faktorisering og kvadratkomplettering<a class=\"headerlink\" href=\"#faktorisering-og-kvadratkomplettering\" title=\"Permalink til denne overskrift\">#</a></h1><p>To vigtige discipliner, som du skal blive komfortabel med er <em>faktorisering</em> og <em>kvadratkomplettering</em>. Du har allerede st\u00f8dt p\u00e5 begrebet faktorisering i <a class=\"reference internal\" href=\"regnearterne.html#regnearterne\"><span class=\"std std-numref\">Kapitel 1.3</span></a>. Kvadratkomplettering er egentlig ogs\u00e5 faktorisering, som du vil se, men metoden er s\u00e5 vigtig, at vi tildeler emnet et kapitel for sig selv.</p>", "a[href=\"#associativitet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3.2.2. </span>Associativitet<a class=\"headerlink\" href=\"#associativitet\" title=\"Permalink til denne overskrift\">#</a></h3><p>Vi siger, at en regneoperator er associativ, hvis det opfylder den associative lov. Har vi en regner\u00e6kke med samme regneoperator, s\u00e5 siger loven, at det vil v\u00e6re ligegyldigt, hvor vi starter med at regne:</p>", "a[href=\"#gange-ind-i-parentes\"]": "<div class=\"proof eksempel admonition\" id=\"gange-ind-i-parentes\">\n<p class=\"admonition-title\"><span class=\"caption-number\">Eksempel 1.7 </span> (Gange ind i parentes)</p>\n<section class=\"eksempel-content\" id=\"proof-content\">\n<p>Bruger vi kombinationen af <span class=\"math notranslate nohighlight\">\\(+\\)</span> eller <span class=\"math notranslate nohighlight\">\\(-\\)</span> og <span class=\"math notranslate nohighlight\">\\(\\cdot\\)</span>, s\u00e5 vil den opfylde den distributive lov. Lad os vise det for <span class=\"math notranslate nohighlight\">\\(a=2\\)</span>, <span class=\"math notranslate nohighlight\">\\(b=5\\)</span> og <span class=\"math notranslate nohighlight\">\\(c=3\\)</span>. Vi s\u00e6tter selvf\u00f8lgelig <span class=\"math notranslate nohighlight\">\\(\\cdot\\)</span> ind p\u00e5 <span class=\"math notranslate nohighlight\">\\(\\circ\\)</span>-pladsen og <span class=\"math notranslate nohighlight\">\\(+\\)</span> eller <span class=\"math notranslate nohighlight\">\\(-\\)</span> ind p\u00e5 <span class=\"math notranslate nohighlight\">\\(\\diamond\\)</span>-pladsen:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    2 \\cdot (5 + 3) = 2 \\cdot 8 = 16\n    \n\\]</div>\n<div class=\"math notranslate nohighlight\">\n\\[    2 \\cdot 5 + 2 \\cdot 3 = 10 + 6 = 16\\]</div>\n<p>ergo m\u00e5 <span class=\"math notranslate nohighlight\">\\(2 \\cdot (5 + 3) = 2 \\cdot 5 + 2 \\cdot 3\\)</span>, og</p>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    2 \\cdot (5 - 3) = 2 \\cdot 2 = 4\n    \n\\]</div>\n<div class=\"math notranslate nohighlight\">\n\\[    2 \\cdot 5 - 2 \\cdot 3 = 10 - 6 = 4\\]</div>\n<p>ergo m\u00e5 <span class=\"math notranslate nohighlight\">\\(2 \\cdot (5 - 3) = 2 \\cdot 5 - 2 \\cdot 3\\)</span>.</p>\n</section>\n</div>", "a[href=\"#plus-og-gange-er-kommutative\"]": "<div class=\"proof eksempel admonition\" id=\"plus-og-gange-er-kommutative\">\n<p class=\"admonition-title\"><span class=\"caption-number\">Eksempel 1.5 </span> (<span class=\"math notranslate nohighlight\">\\(+\\)</span> og <span class=\"math notranslate nohighlight\">\\(\\cdot\\)</span> er kommutative)</p>\n<section class=\"eksempel-content\" id=\"proof-content\">\n<p>Lad <span class=\"math notranslate nohighlight\">\\(a=2\\)</span> og <span class=\"math notranslate nohighlight\">\\(b=4\\)</span> og lad os s\u00e6tte <span class=\"math notranslate nohighlight\">\\(+\\)</span> og <span class=\"math notranslate nohighlight\">\\(\\cdot\\)</span> ind i cirklen og se, at p\u00e5standen om kommutativitet passer:</p>\n<div class=\"math notranslate nohighlight\">\n\\[\n        \n    2 + 4 = 6\n        \n\\]</div>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    4 + 2 = 6\n    \n\\]</div>\n<p>ergo m\u00e5 <span class=\"math notranslate nohighlight\">\\(2+4=4+2\\)</span>, og</p>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    2 \\cdot 4 = 8\n    \n\\]</div>\n<div class=\"math notranslate nohighlight\">\n\\[\n    \n    4 \\cdot 2 = 8\n    \n\\]</div>\n<p>ergo m\u00e5 <span class=\"math notranslate nohighlight\">\\(2\\cdot 4 = 4 \\cdot 2\\)</span>. Du kan selv pr\u00f8ve med andre tal og lade dig overbevise, at disse regneoperatorer er kommutative.</p>\n</section>\n</div>", "a[href=\"#kommutativitet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.3.2.1. </span>Kommutativitet<a class=\"headerlink\" href=\"#kommutativitet\" title=\"Permalink til denne overskrift\">#</a></h3><p>Vi siger, at en regneart eller regneoperator er kommutativ, hvis det opfylder den kommutative lov. Loven fort\u00e6ller, at en regneoperator vil give samme resultat uanset elementernes placering omkring regneoperatoren:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,
                onShow(instance) {MathJax.typesetPromise([instance.popper]).then(() => {});},
            });
        };
    };
    console.log("tippy tips loaded!");
};
